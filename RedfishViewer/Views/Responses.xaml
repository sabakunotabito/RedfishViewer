<UserControl
    x:Class="RedfishViewer.Views.Responses"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:diffplex="clr-namespace:DiffPlex.Wpf.Controls;assembly=DiffPlex.Wpf"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:rp="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
    d:DesignHeight="675"
    d:DesignWidth="1200"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{materialDesign:MaterialDesignFont}"
    TextElement.FontSize="14"
    TextElement.FontWeight="Medium"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <!--  Rest API から 取得した情報を表に表示する  -->
        <DataGrid
            AllowDrop="False"
            AutoGenerateColumns="False"
            FrozenColumnCount="1"
            HorizontalScrollBarVisibility="Auto"
            IsReadOnly="True"
            ItemsSource="{Binding Results, Mode=OneWay}"
            SelectedIndex="{Binding ResultIndex.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            SelectedItem="{Binding ResultItem.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            SelectionMode="Extended"
            Style="{StaticResource MaterialDesignDataGrid}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="LoadingRow">
                    <rp:EventToReactiveCommand Command="{Binding LoadingRowCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Columns>
                <DataGridTemplateColumn CanUserResize="False" Header="No.">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock HorizontalAlignment="Right" Text="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=Header}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--  メソッド  -->
                <DataGridTextColumn
                    Binding="{Binding Method.Value}"
                    CanUserResize="False"
                    Header="MH" />
                <!--  URI  -->
                <DataGridTextColumn
                    Binding="{Binding Uri.Value}"
                    CanUserResize="True"
                    Header="Uri" />
                <!--  HTTPステータスコード  -->
                <DataGridTextColumn
                    Binding="{Binding StatusCode.Value}"
                    CanUserResize="True"
                    Header="Stts">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <!--  更新日時  -->
                <DataGridTextColumn
                    Binding="{Binding Updated.Value, StringFormat=\{0:s\}}"
                    CanUserResize="False"
                    Header="更新日時" />
                <!--  前回の更新日時  -->
                <DataGridTextColumn
                    Binding="{Binding LastUpdated.Value, StringFormat=\{0:s\}}"
                    CanUserResize="False"
                    Header="前回日時" />
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu Style="{StaticResource MaterialDesignContextMenu}">
                    <MenuItem Command="ApplicationCommands.Copy" Header="コピー">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ContentCopy" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding ReRequestCommand}"
                        Header="リクエスト反映"
                        ToolTip="前回のHTTPリクエスト条件を反映します">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="History" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem
                        Command="{Binding ClearResultsCommand}"
                        Header="結果をクリア"
                        ToolTip="HTTPリクエスト結果をクリアします">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Eraser" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
        <!--  セパレータ  -->
        <GridSplitter
            Grid.Column="1"
            Width="5"
            HorizontalAlignment="Center"
            VerticalAlignment="Stretch" />
        <!--  Rest API の JSON コンテンツ  -->
        <TabControl Grid.Column="2">
            <TabItem Header="コンテンツ">
                <FlowDocumentScrollViewer Document="{Binding HttpContent.Value, Mode=OneWay}" IsToolBarVisible="True" />
            </TabItem>
            <TabItem Header="前回比較">
                <diffplex:DiffViewer
                    IsSideBySide="{Binding IsSideBySide.Value}"
                    NewText="{Binding NewText.Value}"
                    OldText="{Binding OldText.Value}" />
            </TabItem>
            <TabItem Header="ヘッダ">
                <ScrollViewer>
                    <StackPanel>
                        <!--  HTTP Response Header  -->
                        <GroupBox
                            Margin="16"
                            Header="HTTP Response ヘッダ"
                            Style="{StaticResource MaterialDesignHeaderedContentControl}">
                            <DataGrid
                                Margin="16,4"
                                AllowDrop="False"
                                AutoGenerateColumns="False"
                                FrozenColumnCount="1"
                                HorizontalScrollBarVisibility="Auto"
                                IsReadOnly="True"
                                ItemsSource="{Binding OutHeaders, Mode=OneTime}"
                                SelectionMode="Extended"
                                Style="{StaticResource MaterialDesignDataGrid}">
                                <DataGrid.Columns>
                                    <!--  ヘッダ名(キー)  -->
                                    <DataGridTextColumn
                                        Binding="{Binding Key.Value}"
                                        CanUserResize="True"
                                        CanUserSort="False"
                                        Header="ヘッダ名" />
                                    <!--  値  -->
                                    <DataGridTextColumn
                                        Binding="{Binding Value.Value}"
                                        CanUserResize="False"
                                        CanUserSort="False"
                                        Header="値" />
                                </DataGrid.Columns>
                                <DataGrid.ContextMenu>
                                    <ContextMenu Style="{StaticResource MaterialDesignContextMenu}">
                                        <MenuItem Command="ApplicationCommands.Copy" Header="コピー">
                                            <MenuItem.Icon>
                                                <materialDesign:PackIcon Kind="ContentCopy" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                            </DataGrid>
                        </GroupBox>

                        <!--  HTTPリクエスト:ヘッダー  -->
                        <GroupBox
                            Margin="16"
                            Header="HTTP Request ヘッダ"
                            Style="{StaticResource MaterialDesignHeaderedContentControl}">
                            <DataGrid
                                Margin="16,4"
                                AllowDrop="False"
                                AutoGenerateColumns="False"
                                FrozenColumnCount="1"
                                HorizontalScrollBarVisibility="Auto"
                                IsReadOnly="True"
                                ItemsSource="{Binding InHeaders, Mode=OneTime}"
                                SelectionMode="Extended"
                                Style="{StaticResource MaterialDesignDataGrid}">
                                <DataGrid.Columns>
                                    <!--  ヘッダ名(キー)  -->
                                    <DataGridTextColumn
                                        Binding="{Binding Key.Value}"
                                        CanUserResize="True"
                                        CanUserSort="False"
                                        Header="ヘッダ名" />
                                    <!--  値  -->
                                    <DataGridTextColumn
                                        Binding="{Binding Value.Value}"
                                        CanUserResize="False"
                                        CanUserSort="False"
                                        Header="値" />
                                </DataGrid.Columns>
                                <DataGrid.ContextMenu>
                                    <ContextMenu Style="{StaticResource MaterialDesignContextMenu}">
                                        <MenuItem Command="ApplicationCommands.Copy" Header="コピー">
                                            <MenuItem.Icon>
                                                <materialDesign:PackIcon Kind="ContentCopy" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                            </DataGrid>
                        </GroupBox>

                        <!--  HTTPリクエスト:パラメータ  -->
                        <GroupBox
                            Margin="16"
                            Header="HTTP Request パラメータ"
                            Style="{StaticResource MaterialDesignHeaderedContentControl}">
                            <DataGrid
                                Margin="16,4"
                                AllowDrop="False"
                                AutoGenerateColumns="False"
                                FrozenColumnCount="1"
                                HorizontalScrollBarVisibility="Auto"
                                IsReadOnly="True"
                                ItemsSource="{Binding InParameters, Mode=OneTime}"
                                SelectionMode="Extended"
                                Style="{StaticResource MaterialDesignDataGrid}">
                                <DataGrid.Columns>
                                    <!--  パラメータ名(キー)  -->
                                    <DataGridTextColumn
                                        Binding="{Binding Key.Value}"
                                        CanUserResize="True"
                                        CanUserSort="False"
                                        Header="パラメータ名" />
                                    <!--  値  -->
                                    <DataGridTextColumn
                                        Binding="{Binding Value.Value}"
                                        CanUserResize="False"
                                        CanUserSort="False"
                                        Header="値" />
                                </DataGrid.Columns>
                                <DataGrid.ContextMenu>
                                    <ContextMenu Style="{StaticResource MaterialDesignContextMenu}">
                                        <MenuItem Command="ApplicationCommands.Copy" Header="コピー">
                                            <MenuItem.Icon>
                                                <materialDesign:PackIcon Kind="ContentCopy" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                            </DataGrid>
                        </GroupBox>

                        <!--  HTTPリクエスト: JSON Body  -->
                        <GroupBox
                            Margin="16"
                            Header="HTTP Request Jsonボディ"
                            Style="{StaticResource MaterialDesignHeaderedContentControl}">
                            <ScrollViewer Margin="16,4" HorizontalAlignment="Stretch">
                                <TextBox
                                    Margin="4"
                                    AcceptsReturn="True"
                                    IsReadOnly="True"
                                    Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                    Text="{Binding InJsonBody.Value}" />
                            </ScrollViewer>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
